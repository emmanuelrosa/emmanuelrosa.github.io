<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[EmmanuelRosa.com]]></title><link href="http://emmanuelrosa.com/categories/gorm/atom.xml" rel="self"/><link href="http://emmanuelrosa.com/"/><updated>2015-12-22T10:31:21-05:00</updated><id>http://emmanuelrosa.com/</id><author><name><![CDATA[Emmanuel Rosa]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Grails domain class associations]]></title><link rel="alternative" href="http://emmanuelrosa.com/articles/grails-domain-class-associations/"/><updated>2015-12-22T10:31:21-05:00</updated><id>f2d6a065bb3b8db98641f90c390a8823</id><content type="html"><![CDATA[<p>When working with Grails domain models I often find myself wondering: <em>How is this modeled in the database?</em></p>
<p>The combinations of <code>hasMany</code>, <code>belongsTo</code>, (and the occasional <code>hasOne</code>) lead to the <a href="#onetomany">one-to-many</a>, <a href="#manytomany">many-to-many</a>, <a href="#manytoone">many-to-one</a>, and <a href="#onetoone">one-to-one</a> associations. But how? What are these combinations? <!--more-->Well, feast your eyes on some Groovy and relational database porn.</p>
<h1><a name="onetomany"></a>One-to-many</h1>
<p>In the first example, an <code>Author</code> has many <code>Book</code>s, producing a one-to-many uni-directional relationship. Uni-directional meaning that an <code>Author</code> has a reference to its <code>Book</code>s, however, a <code>Book</code> has no clue about its <code>Author</code>. The association is created with the <code>hasMany</code> static property in the <code>Author</code> domain class.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Author</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">hasMany</span> <span class="o">=</span> <span class="o">[</span><span class="nl">books:</span> <span class="n">Book</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Book</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">title</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">year</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">isbn</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<p><img src='http://emmanuelrosa.com/images/one-to-many-c2eba0c1097bf6df3fa1cdf1c5eac252.png' alt='One-to-many' >
</p>
<p>As shown in the database diagram, Grails creates a <em>join table</em> to represent the one-to-many association. The join table has two foreign key columns: the <code>Author</code>'s ID, and the <code>Book</code>'s ID.</p>
<p>It's worth nothing, since the <code>Book</code> does not have a reference to its <code>Author</code>, it's possible for multiple <code>Author</code>s to have the same <code>Book</code>. Notice how the <code>author_book</code> table makes this possible. To have Grails enforce that you want a <code>Book</code> to have a single <code>Author</code>, you'll need a bi-directional one-to-many association.</p>
<h2>Bi-directional</h2>
<p>With a bi-directional association, a <code>Book</code> is given a property which references its <code>Author</code>. This is done by adding a <code>belongsTo</code> static property to the <code>Book</code> class.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Author</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">hasMany</span> <span class="o">=</span> <span class="o">[</span><span class="nl">books:</span> <span class="n">Book</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Book</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">title</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">year</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">isbn</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">belongsTo</span> <span class="o">=</span> <span class="o">[</span><span class="nl">author:</span> <span class="n">Author</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<p><img src='http://emmanuelrosa.com/images/one-to-many-bi-dfbc551ac9b7bfed5c9447447dbbea14.png' alt='One-to-many bi-directional' >
</p>
<p>Now, a foreign key is added to the <code>Book</code> containing the <code>Author</code>'s ID. The join table is simply not used anymore. This implies that without an <code>Author</code> there can be no <code>Book</code>. Put differently, an <code>Author</code> <em>owns</em> its <code>Book</code>s.</p>
<h1><a name="manytomany"></a>Many-to-many</h1>
<p>A many-to-many association is created by using a <code>hasMany</code> static property in both domain classes. <strong>And</strong>, by using a <code>belongsTo</code> static property lacking a back-reference in the <code>Book</code> domain class.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Author</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">hasMany</span> <span class="o">=</span> <span class="o">[</span><span class="nl">books:</span> <span class="n">Book</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Book</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">title</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">year</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">isbn</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">hasMany</span> <span class="o">=</span> <span class="o">[</span><span class="nl">authors:</span> <span class="n">Author</span><span class="o">]</span>
</span><span class='line'>    <span class="kd">static</span> <span class="n">belongsTo</span> <span class="o">=</span> <span class="n">Author</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<p><img src='http://emmanuelrosa.com/images/many-to-many-3331d20a67053e0bfa999b3b56daa314.png' alt='Many-to-many' >
</p>
<p>Like a uni-directional one-to-many, a many-to-many association uses a join table. In fact, at the database level it looks identical to a uni-directional one-to-many.</p>
<h1><a name="manytoone"></a>Many-to-one</h1>
<p>Creating a uni-directional many-to-one association doesn't require <code>hasMany</code> or the like. It's just a matter of adding an instance property.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Book</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">title</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">year</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">isbn</span>
</span><span class='line'>    <span class="n">Publisher</span> <span class="n">publisher</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Publisher</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<p><img src='http://emmanuelrosa.com/images/many-to-one-cccf0306a07ab1574ae646f8db21e9ce.png' alt='Many-to-one' >
</p>
<h2>Bi-directional</h2>
<p>A bi-directional many-to-one is created using the static <code>belongsTo</code> property. Surprisingly, this doesn't affect the database.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Book</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">title</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">year</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">isbn</span>
</span><span class='line'>    <span class="n">Publisher</span> <span class="n">publisher</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">Publisher</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">belongsTo</span> <span class="o">=</span> <span class="o">[</span><span class="nl">book:</span> <span class="n">Book</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<h1><a name="onetoone"></a>One-to-one</h1>
<p>Finally, you get to see the static <code>hasOne</code> property in action!</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kd">class</span> <span class="nc">Author</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">name</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="n">hasOne</span> <span class="o">=</span> <span class="o">[</span><span class="nl">user:</span> <span class="n">User</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">username</span>
</span><span class='line'>    <span class="n">Author</span> <span class="n">author</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>
<p><img src='http://emmanuelrosa.com/images/one-to-one-c016839141ca5622bd8b36c28f5a359b.png' alt='One-to-one' >
</p>
<p>In the database, it looks just like a bi-directional one-to-many.</p>
<h1>Enlightenment</h1>
<p>As you've just read, it takes a precise combination of the <code>hasMany</code>, <code>belongsTo</code> and <code>hasOne</code> static properties, and sometimes an instance property, to assemble the various Grails domain class associations. Some are <em>self-explanatory</em>, others not so much. Either way, you may reference this guide when you need it.</p>
]]></content></entry></feed>